package queue;

import org.junit.Test;
import static org.junit.Assert.*;

public class QueueTest {

    @Test
    public void testIsEmpty() {
        Queue<Integer> queue = new Queue<>();
        assertTrue(queue.isEmpty());

        queue.enqueue(1);
        assertFalse(queue.isEmpty());

        queue.dequeue();
        assertTrue(queue.isEmpty());
    }

    @Test
    public void testSize() {
        Queue<String> queue = new Queue<>();
        assertEquals(0, queue.size());

        queue.enqueue("first");
        assertEquals(1, queue.size());

        queue.enqueue("second");
        assertEquals(2, queue.size());

        queue.dequeue();
        assertEquals(1, queue.size());

        queue.dequeue();
        assertEquals(0, queue.size());
    }

    @Test
    public void testEnqueueDequeue() {
        Queue<Character> queue = new Queue<>();
        queue.enqueue('A');
        queue.enqueue('B');
        queue.enqueue('C');

        assertEquals('A', (char) queue.dequeue());
        assertEquals('B', (char) queue.dequeue());
        assertEquals('C', (char) queue.dequeue());
    }

    @Test(expected = NoSuchElementException.class)
    public void testDequeueEmptyQueue() {
        Queue<Double> queue = new Queue<>();
        queue.dequeue(); // This should throw NoSuchElementException
    }

    @Test(expected = NoSuchElementException.class)
    public void testPeekEmptyQueue() {
        Queue<String> queue = new Queue<>();
        queue.peek(); // This should throw NoSuchElementException
    }

    @Test
    public void testPeek() {
        Queue<Integer> queue = new Queue<>();
        assertNull(queue.peek());

        queue.enqueue(42);
        assertEquals(42, (int) queue.peek());

        queue.enqueue(10);
        assertEquals(42, (int) queue.peek());

        queue.dequeue();
        assertEquals(10, (int) queue.peek());
    }
}

